[build-system]
# build the package with [flit](https://flit.readthedocs.io)
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
# See https://www.python.org/dev/peps/pep-0621/
name = "aiida-fhiaims"
dynamic = ["version"]  # read from aiida_fhiaims/__init__.py
description = "An AiiDA plugin for FHI-aims code"
authors = [{name = "Andrey Sobolev", email = "sobolev@fhi.mpg.de"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
    "Framework :: AiiDA"
]
keywords = ["aiida", "plugin"]
requires-python = ">=3.7"
dependencies = [
    "aiida-core>=2.0,<3",
    "voluptuous"
]

[project.urls]
Source = "https://github.com/ansobolev/aiida-fhiaims"

[project.optional-dependencies]
testing = [
    "pgtest~=1.3.1",
    "wheel~=0.31",
    "coverage[toml]",
    "pytest~=6.0",
    "pytest-cov",
    "aiida-testing"
]
pre-commit = [
    "pre-commit~=2.2",
    "pylint>=2.5.0,<2.9"
]
docs = [
    "sphinx",
    "sphinxcontrib-contentui",
    "sphinxcontrib-details-directive",
    "furo",
    "markupsafe<2.1"
]

[project.entry-points."aiida.cmdline.data"]
"species-defaults" = "aiida_fhiaims.cli.species_defaults:species_defaults"

[project.entry-points."aiida.data"]
"fhiaims.species_file" = "aiida_fhiaims.data.species_file:BasisFile"

[project.entry-points."aiida.groups"]
"fhiaims.species_family" = "aiida_fhiaims.data.species_family:BasisFamily"

[project.entry-points."aiida.calculations"]
"fhiaims" = "aiida_fhiaims.calculations:AimsCalculation"

[project.entry-points."aiida.parsers"]
"fhiaims.json" = "aiida_fhiaims.parsers.aims_json:AimsJSONParser"
"fhiaims.out" = "aiida_fhiaims.parsers.aims_out:AimsOutParser"

[tool.flit.module]
name = "aiida_fhiaims"

[tool.pylint.format]
max-line-length = 125

[tool.pylint.messages_control]
disable = [
    "too-many-ancestors",
    "invalid-name",
    "duplicate-code",
    # black compatibility
    "C0330",
    "C0326",
]

[tool.pytest.ini_options]
# Configuration for [pytest](https://docs.pytest.org)
python_files = "test_*.py example_*.py"
filterwarnings = [
    "ignore::DeprecationWarning:aiida:",
    "ignore::DeprecationWarning:plumpy:",
    "ignore::DeprecationWarning:yaml:",
]

[tool.coverage.run]
# Configuration of [coverage.py](https://coverage.readthedocs.io)
# reporting which lines of your plugin are covered by tests
source=["aiida_fhiaims"]

[tool.isort]
# Configuration of [isort](https://isort.readthedocs.io)
line_length = 120
force_sort_within_sections = true
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'AIIDA', 'FIRSTPARTY', 'LOCALFOLDER']
known_aiida = ['aiida']

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38

[testenv]
usedevelop=True

[testenv:py{37,38,39,310}]
description = Run the test suite against a python version
extras = testing
commands = pytest {posargs}

[testenv:pre-commit]
description = Run the pre-commit checks
extras = pre-commit
commands = pre-commit run {posargs}

[testenv:docs]
description = Build the documentation
extras = docs
commands = sphinx-build -nW --keep-going -b html {posargs} docs/source docs/build/html
commands_post = echo "open file://{toxinidir}/docs/build/html/index.html"
"""
